{"version":3,"file":"static/js/206.c5e52172.chunk.js","mappings":"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","sources":["components/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-width: 400px;\n  margin: 0 auto;\n`;\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 40px;\n`;\nexport const SubTitle = styled.h2`\n  text-align: center;\n  font-size: 40px;\n`;\n","import styled from 'styled-components';\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  max-width: 400 px;\n  padding: 20px;\n  justify-content: center;\n  background-color: rgb(165, 202, 245);\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n`;\nexport const Label = styled.label`\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const Input = styled.input`\n  padding: 8px 12px;\n  cursor: pointer;\n  border: none;\n  border-radius: 4px;\n  background-color: #f6f0d0;\n  margin-top: 4px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n`;\nexport const Button = styled.button`\n  padding: 8px 12px;\n  cursor: pointer;\n  display: block;\n  margin: 0 auto;\n  border-radius: 4px;\n  border: none;\n  font: inherit;\n  background-color: #f4df7f;\n  color: inherit;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  &:hover,\n  &:focus {\n    background-color: #1976d2;\n    color: #fff;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { Form, Label, Button, Input } from './ContactForm.styled';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { toast } from 'react-hot-toast';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const contactId = nanoid();\n\n    if (\n      contacts.some(\n        contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n      )\n    ) {\n      toast.error(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact({ id: contactId, name: name, number: number }));\n    }\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={nameInputId}>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          id=\"nameInputId\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Name\"\n        />\n      </Label>\n\n      <Label htmlFor={numberInputId}>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          id=\"numberInputId\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Number\"\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  max-width: 400px;\n  padding: 0 20px;\n  gap: 5px;\n  background-color: rgb(165, 202, 245);\n`;\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n  padding: 4px;\n  border-bottom: 1px solid #2f2f37;\n`;\nexport const Button = styled.button`\n  display: inline-flex;\n  border-radius: 4px;\n  border: none;\n  background-color: #f4df7f;\n  color: inherit;\n  padding: 4px 8px;\n  cursor: pointer;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  &:hover,\n  &:focus {\n    background-color: #1976d2;\n    color: #fff;\n  }\n`;\n","import React from 'react';\nimport { List, Item, Button } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectFilteredContacts } from '../../redux/contacts/selectors';\nimport { DeleteIcon } from '@chakra-ui/icons';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          {name + ' : ' + number}\n          {\n            <Button\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              <DeleteIcon />\n            </Button>\n          }\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\nexport const Div = styled.div`\n  margin-bottom: 10px;\n  max-width: 400 px;\n  padding: 20px;\n  background-color: rgb(165, 202, 245);\n`;\nexport const Label = styled.label`\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const Input = styled.input`\n  padding: 8px 12px;\n  cursor: pointer;\n  border: none;\n  border-radius: 4px;\n  background-color: #f6f0d0;\n  margin-top: 4px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n`;\n","import React from 'react';\nimport { Div, Label, Input } from './Filter.styled';\n\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { changeFilter } from '../../redux/contacts/filterSlice';\n\nconst filterInputId = nanoid();\n\nconst Filter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const normalizedValue = e.target.value.toLowerCase();\n    dispatch(changeFilter(normalizedValue));\n  };\n\n  return (\n    <Div>\n      <Label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          id={filterInputId}\n          placeholder=\"Name\"\n        />\n      </Label>\n    </Div>\n  );\n};\n\nexport default Filter;\n","import { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { Toaster } from 'react-hot-toast';\n\nimport { Container, Title, SubTitle } from '../components/App.styled';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { selectIsLoading } from '../redux/contacts/selectors';\nimport { selectContacts } from '../redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {isLoading && <p>Request in progress...</p>}\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <SubTitle>Contacts</SubTitle>\n      {contacts.length > 0 ? (\n        <Filter />\n      ) : (\n        <b>Your phonebook is empty. Add first contact!</b>\n      )}\n      {contacts.length > 0 && <ContactList />}\n\n      <Toaster />\n    </Container>\n  );\n};\nexport default ContactsPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","SubTitle","_templateObject3","Form","Label","Input","Button","_templateObject4","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","useSelector","dispatch","useDispatch","nameInputId","nanoid","numberInputId","handleChange","e","_e$currentTarget","currentTarget","value","_jsxs","onSubmit","preventDefault","form","elements","contactId","some","toLocaleLowerCase","toast","concat","addContact","id","children","htmlFor","_jsx","type","onChange","pattern","title","required","placeholder","List","Item","filteredContacts","map","_ref","onClick","deleteContact","DeleteIcon","Div","filterInputId","normalizedValue","target","changeFilter","useEffect","fetchContacts","ContactForm","length","Filter","ContactList","Toaster"],"sourceRoot":""}