{"version":3,"file":"static/js/751.a188f5f9.chunk.js","mappings":"qPAEaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kDAItBC,EAAQH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qDAIjBG,EAAWL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oD,+JCTpBK,EAAOP,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oRAWlBM,EAAQR,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2EAKpBO,EAAQT,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+LASpBQ,EAASV,EAAAA,GAAAA,OAAaW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,qU,mIC+CnC,EA/DqB,WACnB,IAAMU,GAAWC,EAAAA,EAAAA,MAoBjB,OACEC,EAAAA,EAAAA,MAACP,EAAAA,GAAI,CAACQ,SAnBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAAQL,EAAKG,SAASE,MAAMD,MAC5BE,EAAWN,EAAKG,SAASG,SAASF,MACxCV,GAASa,EAAAA,EAAAA,IAAS,CAAEL,KAAMA,EAAMG,MAAOA,EAAOC,SAAUA,KACrDE,SACAC,MAAK,WACJC,EAAAA,GAAAA,QAAc,4BAChB,IACCC,OAAM,WACLD,EAAAA,GAAAA,MAAY,gBACd,IAEFV,EAAKY,OACP,EAGgCC,aAAa,MAAKC,SAAA,EAC9ClB,EAAAA,EAAAA,MAACN,EAAAA,GAAK,CAAAwB,SAAA,CAAC,QAELC,EAAAA,EAAAA,KAACxB,EAAAA,GAAK,CACJyB,KAAK,OACLd,KAAK,OACLe,YAAY,WACZC,QAAQ,YACRC,MAAM,yIACNC,UAAQ,QAIZxB,EAAAA,EAAAA,MAACN,EAAAA,GAAK,CAAAwB,SAAA,CAAC,SAELC,EAAAA,EAAAA,KAACxB,EAAAA,GAAK,CACJyB,KAAK,QACLd,KAAK,QACLe,YAAY,QACZG,UAAQ,EACRF,QAAQ,iCACRC,MAAM,uEAIVvB,EAAAA,EAAAA,MAACN,EAAAA,GAAK,CAAAwB,SAAA,CAAC,YAELC,EAAAA,EAAAA,KAACxB,EAAAA,GAAK,CACJyB,KAAK,WACLd,KAAK,WACLe,YAAY,WACZC,QAAQ,6CACRC,MAAM,uFACNC,UAAQ,QAIZL,EAAAA,EAAAA,KAACvB,EAAAA,GAAM,CAACwB,KAAK,SAAQF,SAAC,cAG5B,EC7DA,EARqB,WACnB,OACElB,EAAAA,EAAAA,MAACf,EAAAA,GAAS,CAAAiC,SAAA,EACRC,EAAAA,EAAAA,KAAC9B,EAAAA,GAAK,CAAA6B,SAAC,mBACPC,EAAAA,EAAAA,KAACM,EAAY,MAGnB,C","sources":["components/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-width: 400px;\n  margin: 0 auto;\n`;\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 40px;\n`;\nexport const SubTitle = styled.h2`\n  text-align: center;\n  font-size: 40px;\n`;\n","import styled from 'styled-components';\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  max-width: 400 px;\n  padding: 20px;\n  justify-content: center;\n  background-color: rgb(165, 202, 245);\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n`;\nexport const Label = styled.label`\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const Input = styled.input`\n  padding: 8px 12px;\n  cursor: pointer;\n  border: none;\n  border-radius: 4px;\n  background-color: #f6f0d0;\n  margin-top: 4px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n`;\nexport const Button = styled.button`\n  padding: 8px 12px;\n  cursor: pointer;\n  display: block;\n  margin: 0 auto;\n  border-radius: 4px;\n  border: none;\n  font: inherit;\n  background-color: #f4df7f;\n  color: inherit;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  &:hover,\n  &:focus {\n    background-color: #1976d2;\n    color: #fff;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport {\n  Button,\n  Label,\n  Form,\n  Input,\n} from '../../components/ContactForm/ContactForm.styled';\nimport { toast } from 'react-hot-toast';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n    dispatch(register({ name: name, email: email, password: password }))\n      .unwrap()\n      .then(() => {\n        toast.success('Registration successfully');\n      })\n      .catch(() => {\n        toast.error('Some error...');\n      });\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Username\"\n          pattern=\"^[^\\d]+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label>\n        Email\n        <Input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          required\n          pattern=\"^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$\"\n          title=\"Please enter a valid email address (e.g. example@example.com).\"\n        />\n      </Label>\n\n      <Label>\n        Password\n        <Input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          pattern=\"^(?=.*\\d)(?=.*[a-zA-Z])[a-zA-Z\\d]{8,20}$\"\n          title=\"Password must be 8-20 characters long and contain at least one letter and one digit.\"\n          required\n        />\n      </Label>\n\n      <Button type=\"submit\">Sign in</Button>\n    </Form>\n  );\n};\nexport default RegisterForm;\n","import { Container, Title } from '../components/App.styled';\nimport RegisterForm from '../components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <Container>\n      <Title>Register Page</Title>\n      <RegisterForm />\n    </Container>\n  );\n};\nexport default RegisterPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","SubTitle","_templateObject3","Form","Label","Input","Button","_templateObject4","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","form","currentTarget","name","elements","value","email","password","register","unwrap","then","toast","catch","reset","autoComplete","children","_jsx","type","placeholder","pattern","title","required","RegisterForm"],"sourceRoot":""}